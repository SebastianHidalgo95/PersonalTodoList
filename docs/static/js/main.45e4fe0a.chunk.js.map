{"version":3,"sources":["components/TodoAdd.js","Hooks/useForm.js","components/TodoListItem.js","components/TodoList.js","components/todoReducer.js","components/TodoApp.js","index.js"],"names":["TodoAdd","handleAddTodo","initialState","useState","values","setValues","target","name","value","useForm","description","handleInputChange","reset","onSubmit","e","preventDefault","trim","length","newTodo","id","Date","getTime","desc","done","type","placeholder","autoComplete","className","onChange","required","TodoListItem","todo","handleDelete","handleToogle","i","onClick","TodoList","todos","map","todoReducer","state","action","payload","filter","TodoApp","useReducer","JSON","parse","localStorage","getItem","dispatch","useEffect","setItem","stringify","ReactDOM","render","document","getElementById"],"mappings":"mNAIaA,EAAU,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAEtB,ECHmB,WAAyB,IAAvBC,EAAsB,uDAAP,GAEpC,EAA4BC,mBAAUD,GAAtC,mBAAOE,EAAP,KAAeC,EAAf,KAeA,MAAO,CAAED,EATiB,SAAC,GAAiB,IAAdE,EAAa,EAAbA,OAG1BD,EAAU,2BACHD,GADE,kBAEHE,EAAOC,KAAQD,EAAOE,UATlB,WACVH,EAAWH,KDFuCO,CAAS,CAC3DC,YAAY,KADhB,mBAAUA,EAAV,KAAUA,YAAeC,EAAzB,KAA4CC,EAA5C,KAsBA,OACI,qCACI,8CACA,uBAEA,uBAAMC,SAvBO,SAACC,GAGlB,GAFAA,EAAEC,mBAEEL,EAAYM,OAAOC,QAAS,GAAhC,CAIA,IAAMC,EAAU,CACZC,IAAI,IAAIC,MAAOC,UACfC,KAAMZ,EACNa,MAAM,GAGVtB,EAAeiB,GACfN,MASI,UACI,uBACIY,KAAK,OACLjB,KAAK,cACLkB,YAAY,WACZC,aAAa,MACbC,UAAU,eACVnB,MAAQE,EACRkB,SAAWjB,EACXkB,UAAQ,IAEZ,wBAAQL,KAAK,SAASG,UAAU,sCAAhC,4BE1CHG,EAAe,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,KAAMC,EAAoC,EAApCA,aAAcC,EAAsB,EAAtBA,aAAcC,EAAQ,EAARA,EAC7D,OACI,mCACI,qBAAkBP,UAAU,iCAA5B,UACI,oBACIA,UAAS,UAAKI,EAAKR,MAAQ,aAC3BY,QAAS,kBAAMF,EAAaF,EAAKZ,KAFrC,UAIKe,EAAI,EAJT,KAIcH,EAAKT,QAEnB,wBAAQK,UAAU,iBAAiBQ,QAAS,kBAAMH,EAAaD,EAAKZ,KAApE,sBAPKY,EAAKZ,OCFbiB,EAAW,SAAC,GAA2C,IAAzCC,EAAwC,EAAxCA,MAAOL,EAAiC,EAAjCA,aAAcC,EAAmB,EAAnBA,aAC5C,OACI,mCACI,oBAAIN,UAAU,8BAAd,SAEQU,EAAMC,KAAI,SAACP,EAAMG,GAAP,OACN,cAAC,EAAD,CAEIH,KAAMA,EACNG,EAAGA,EACHF,aAAcA,EACdC,aAAcA,GAJTF,EAAKZ,Y,OCTzBoB,EAAc,WAA0B,IAAxBC,EAAuB,uDAAf,GAAIC,EAAW,uCAEhD,OAAQA,EAAOjB,MACX,IAAK,MACD,MAAM,GAAN,mBAAWgB,GAAX,CAAkBC,EAAOC,UAE7B,IAAK,SACD,OAAOF,EAAMG,QAAQ,SAAAZ,GAAI,OAAIA,EAAKZ,KAAOsB,EAAOC,WAEpD,IAAI,SAOJ,IAAK,4BACD,OAAOF,EAAMF,KAAK,SAAAP,GACd,OAAIA,EAAKZ,KAAOsB,EAAOC,QACZ,2BACAX,GADP,IAEIR,MAAOQ,EAAKR,OAGTQ,KAGnB,QACI,OAAOS,ICrBNI,EAAU,WAEnB,IAKA,EAA4BC,qBAAWN,EAAa,IALvC,WAET,OAAOO,KAAKC,MAAMC,aAAaC,QAAQ,WAAa,MAGxD,mBAAQZ,EAAR,KAAea,EAAf,KAGAC,qBAAU,WAENH,aAAaI,QAAQ,QAASN,KAAKO,UAAWhB,MAE/C,CAAEA,IA2BL,OACI,gCACI,2CAAeA,EAAMpB,OAArB,OACA,uBAEA,sBAAKU,UAAU,MAAf,UAEI,qBAAKA,UAAU,QAAf,SAEI,cAAC,EAAD,CACIU,MAAOA,EACPL,aAnCC,SAAEb,GAMnB+B,EAJe,CACX1B,KAAM,SACNkB,QAASvB,KAgCGc,aA3BC,SAAEd,GACnB+B,EAAU,CACN1B,KAAM,SACNkB,QAASvB,SA6BL,qBAAKQ,UAAU,QAAf,SACI,cAAC,EAAD,CACI1B,cA3BE,SAAEiB,GAEpBgC,EAAU,CACN1B,KAAM,MACNkB,QAASxB,gB,MCvCrBoC,IAASC,OAET,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.45e4fe0a.chunk.js","sourcesContent":["import React from 'react';\r\nimport { useForm } from '../Hooks/useForm';\r\n\r\n\r\nexport const TodoAdd = ({ handleAddTodo }) => {\r\n\r\n    const [ { description }, handleInputChange, reset ] = useForm( { \r\n        description:'',\r\n    });\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if( description.trim().length <=1) {\r\n            return;\r\n        }\r\n\r\n        const newTodo = {\r\n            id: new Date().getTime(),\r\n            desc: description,\r\n            done: false,\r\n        };\r\n\r\n        handleAddTodo( newTodo );\r\n        reset();\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h4>Agregar Todo</h4>\r\n            <hr />\r\n\r\n            <form onSubmit={ handleSubmit }>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"description\"\r\n                    placeholder=\"aprender\"\r\n                    autoComplete=\"off\"\r\n                    className=\"form-control\"\r\n                    value={ description }\r\n                    onChange={ handleInputChange }\r\n                    required\r\n                />\r\n                <button type=\"submit\" className=\"btn btn-outline-primary mt-1 col-12\">\r\n                    Agregar\r\n        </button>\r\n            </form>\r\n        </>\r\n    );\r\n};\r\n","import { useState } from \"react\"\r\n\r\n// Recibe un objeto con las propiedades inputs\r\nexport const useForm = ( initialState = {}) => {\r\n    \r\n    const [values, setValues] = useState( initialState )\r\n\r\n    const reset = () => {\r\n        setValues( initialState )\r\n    }\r\n    //Lee lo que se introduce en cada input\r\n    const handleInputChange = ( { target }) => {\r\n\r\n        //El name del input debe ser el mismo del atributo del objeto\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        })\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n}\r\n","import React from 'react'\r\n\r\nexport const TodoListItem = ({ todo, handleDelete, handleToogle, i }) => {\r\n    return (\r\n        <>\r\n            <li key={todo.id} className=\"list-group-item rounded border\">\r\n                <p\r\n                    className={`${todo.done && 'complete '}`}\r\n                    onClick={() => handleToogle(todo.id)}\r\n                >\r\n                    {i + 1}. {todo.desc}\r\n                </p>\r\n                <button className=\"btn btn-danger\" onClick={() => handleDelete(todo.id)}>\r\n                    Borrar\r\n                </button>\r\n            </li>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { TodoListItem } from './TodoListItem';\r\n\r\nexport const TodoList = ({ todos, handleDelete, handleToogle }) => {\r\n    return (\r\n        <>\r\n            <ul className=\"list-group list-group-flush\">\r\n                {\r\n                    todos.map((todo, i) => (\r\n                        <TodoListItem\r\n                            key={todo.id}\r\n                            todo={todo}\r\n                            i={i}\r\n                            handleDelete={handleDelete}\r\n                            handleToogle={handleToogle}\r\n                        />\r\n                    ))\r\n                }\r\n            </ul>\r\n        </>\r\n    );\r\n};\r\n","\r\nexport const todoReducer = ( state = [], action) => {\r\n    \r\n    switch (action.type) {\r\n        case 'add':           \r\n            return [...state, action.payload];\r\n        \r\n        case 'delete':                 \r\n            return state.filter( todo => todo.id !== action.payload );\r\n\r\n        case'toggle':\r\n            return state.map( todo => \r\n                ( todo.id === action.payload )\r\n                    ? { ...todo, done:!todo.done}     \r\n                    :todo\r\n            );  \r\n\r\n        case 'toggle-old-way-and-boring':\r\n            return state.map( todo => {\r\n                if( todo.id === action.payload ) {\r\n                    return {\r\n                        ...todo,\r\n                        done: !todo.done\r\n                    }\r\n                } else {\r\n                    return todo;\r\n                }\r\n            }) \r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import React, { useEffect, useReducer } from 'react';\r\n\r\nimport './styles.css';\r\nimport { TodoAdd } from './TodoAdd';\r\nimport { TodoList } from './TodoList';\r\n\r\nimport { todoReducer } from './todoReducer';\r\n\r\nexport const TodoApp = () => {\r\n\r\n    const init = () => {\r\n\r\n        return JSON.parse(localStorage.getItem('todos')) || [];\r\n    }\r\n    \r\n    const [ todos, dispatch ] = useReducer(todoReducer, [], init);\r\n\r\n    \r\n    useEffect(() => {\r\n        \r\n        localStorage.setItem('todos', JSON.stringify( todos ))\r\n        \r\n    }, [ todos ])\r\n\r\n\r\n    const handleDelete = ( id ) => {        \r\n        \r\n        const action = {\r\n            type: 'delete',\r\n            payload: id,\r\n        }\r\n        dispatch( action );\r\n    }\r\n\r\n    const handleToogle = ( id ) => {\r\n        dispatch( {\r\n            type: 'toggle',\r\n            payload: id,\r\n        });\r\n    }\r\n\r\n    const handleAddTodo = ( newTodo ) => {\r\n        \r\n        dispatch ({\r\n            type: 'add',\r\n            payload: newTodo,\r\n        });\r\n    }\r\n   \r\n    return (\r\n        <div>\r\n            <h1>TodoApp ({ todos.length})</h1>\r\n            <hr />\r\n\r\n            <div className=\"row\">\r\n\r\n                <div className=\"col-7\">\r\n\r\n                    <TodoList \r\n                        todos={todos}\r\n                        handleDelete={handleDelete}\r\n                        handleToogle={handleToogle}\r\n                    />\r\n                     \r\n                </div>\r\n\r\n                <div className=\"col-5\">\r\n                    <TodoAdd \r\n                        handleAddTodo={ handleAddTodo }\r\n                    />\r\n\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { TodoApp } from './components/TodoApp';\nimport './index.css';\n\n\nReactDOM.render(\n\n<TodoApp />,\ndocument.getElementById('root')\n);\n\n\n"],"sourceRoot":""}